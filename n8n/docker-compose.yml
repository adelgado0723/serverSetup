version: '3'

services:
  n8n:
    container_name: n8n
    image: n8nio/n8n
    depends_on:
      - n8n-nginx
    restart: unless-stopped
    ports:
      - '5678:5678'
    volumes:
      - ./n8n_data:/home/node/.n8n
      - /usr/local/lib/node_modules:/home/node/node_modules
    environment:
      - NODE_PATH=/home/node/node_modules
      - WEBHOOK_TUNNEL_URL=https://${DOMAIN}
      - WEBHOOK_URL=https://${DOMAIN}
      - N8N_BASIC_AUTH_USER=${N8N_BASIC_AUTH_USER}
      - N8N_BASIC_AUTH_PASSWORD=${N8N_BASIC_AUTH_PASSWORD}
      - N8N_BASIC_AUTH_ACTIVE=${N8N_BASIC_AUTH_ACTIVE}
      - N8N_RUNNERS_ENABLED=${N8N_RUNNERS_ENABLED}
      - GENERIC_TIMEZONE=${GENERIC_TIMEZONE}
      - NODE_FUNCTION_ALLOW_EXTERNAL=${NODE_FUNCTION_ALLOW_EXTERNAL}
    networks:
      - n8n-network

  n8n-nginx:
    container_name: n8n-nginx
    image: nginx:alpine
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    restart: unless-stopped
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ../configs/nginx_n8n:/etc/nginx/conf.d
      - ./certbot/www/:/var/www/certbot/
      - ./certbot/conf/:/etc/letsencrypt/
    environment:
      - DOMAIN=${DOMAIN}
      - EMAIL=${EMAIL}
    networks:
      - n8n-network

  n8n-certbot:
    container_name: n8n-certbot
    image: certbot/certbot:latest
    volumes:
      - ./certbot/www/:/var/www/certbot/
      - ./certbot/conf/:/etc/letsencrypt/
    environment:
      - DOMAIN=${DOMAIN}
      - EMAIL=${EMAIL}
    # 1. Comment out the ssl server block
    # 2. run docker-compose run --rm n8n-certbot certonly --webroot --webroot-path /var/www/certbot/ --email ${EMAIL} --agree-tos --no-eff-email  -d ${DOMAIN}
    # 3. Uncomment the ssl server block
    # 4. restart nginx `docker compose exec n8n-nginx nginx -s reload`

networks:
  n8n-network:
    driver: bridge
